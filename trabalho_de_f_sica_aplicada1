#define PUSHBUTTONEQUAL A4
#define PUSHBUTTONFORCA A3
#define PUSHBUTTONCAMPOELETRICO A5

//========================TELA LCD=======================
#include <LiquidCrystal.h>		
LiquidCrystal lcd(2, 3, 4, 5, 6, 7);

//========================TECLADO========================
#include <Keypad.h>									
byte pinosLinhas[]  = {12,11,10,9};
byte pinosColunas[] = {8,A0,A1,A2};

char teclas[4][4] = {{'1','2','3','A'},
                     {'4','5','6','B'},
                     {'7','8','9','C'},
                     {'*','0','#','D'}};

Keypad teclado = Keypad( makeKeymap(teclas), pinosLinhas, pinosColunas, 4, 4);  


byte divisao[8]={
  B00000,
  B00000,
  B00100,
  B00000,
  B11111,
  B00000,
  B00100,};

//========================CONVERT=======================
bool isNegative = false;
long convert(long numList[], byte cont){
	long numero=0; Serial.println();
  	for(int i = 0; i <= cont; i++){
        for(int j = i+1; j <= cont; j++){
        	numList[i] = numList[i] * 10;
        }
        numero += numList[i];
    }
  if(isNegative)
    numero*=-1;
  
  isNegative = false;
  return numero;
}
//========================DECIMAL=======================
float deci(float carga, byte dec){
  for(int i = 0; i <=dec; i++){
  	carga/=10.0;
  }
  return carga;
}
//==================CALC FORCE==================
void calcForce(float Q, float q, float raio, int exQ, int exq, int exR, byte ForceOrCE){
	if(ForceOrCE == 2)
      raio = raio * raio;
  
  float result = (8.99 * Q * q)/raio;
  	int resultExp =(exQ+exq+9)-(exR);
  	lcd.setCursor(0, 1);
  	lcd.print(result, 5);
  	lcd.print("x10^");
  	lcd.print(resultExp);
}
void funcao(char tp,long numList[], byte cont){	
	
}

//==================VARIAVEIS GLOBAIS==================
long numList[16], numero1=0, numero2, resultLong;
float Q=0, q=0, auxForce=0;
float result = 0, raio = 0;
bool pressBut = true, force = false;
char oper;
byte Qq = 0, buttonStateFor =0, cont = -1, dec = -1;
byte buttonStateCE=0, ForceOrCE = 0;
int exQ=0, exq=0, exR=0;
//========================SETUP========================
void setup() {
  lcd.createChar(0, divisao);
  lcd.begin(16, 2);
  lcd.cursor();
  
  Serial.begin(9600);
  
  pinMode(PUSHBUTTONEQUAL, INPUT_PULLUP);
  pinMode(PUSHBUTTONFORCA, INPUT_PULLUP);
  pinMode(PUSHBUTTONCAMPOELETRICO, INPUT_PULLUP);
}
//========================LOOP========================
void loop() {
  char tp = teclado.getKey();
  
  buttonStateFor = digitalRead(PUSHBUTTONFORCA);
  if(buttonStateFor == LOW){
  	ForceOrCE = 1;
  }
  buttonStateCE = digitalRead(PUSHBUTTONCAMPOELETRICO);
  if(buttonStateCE == LOW){
  	ForceOrCE = 2;
  }
	if(ForceOrCE >= 1 && pressBut){
  		bool point = false, isNeg = false;;
    	force = true;
    	
      while(Qq <2){
        force = true;
        if(Qq == 0){
            lcd.print("Q=");
        }else{
          	lcd.setCursor(0,1);
            lcd.print("q=");
        }

        while(force){
          	bool exp = false;
          	tp = teclado.getKey();
          
			if (tp && tp >= '0' && tp <= '9'){
				++cont;
				lcd.write(tp);
				numList[cont]= tp - '0';
			}
			if(tp && tp == '*'){
				lcd.write('.');

            	while(force){
              		tp = teclado.getKey();
					if(tp && tp >= '0' && tp <= '9' && !exp){
                    	++dec;
                      	++cont;
						lcd.write(tp);
						numList[cont]= tp - '0';
                  	}
              
					if(tp && tp == 'B'){
                  		exp = true;
              			lcd.print("x10^");
					}
              
					if(tp && tp == 'C' && exp){
                      	isNeg = true;
                		lcd.print("-");
                	}
              
					if(tp && tp >= '0' && tp <= '9' && exp){
                      if(Qq == 0){
                      	exQ = tp - '0';
                        if(isNeg){
                        	exQ *= -1;
                        	isNeg = false;
                        }
                      }
                      if(Qq == 1){
                      	exq = tp - '0';
                        if(isNeg){
                        	exq *= -1;
                        	isNeg = false;
                        }
                      }
                	lcd.print(tp);
					}
                  
                	if(tp && tp == '#'){
                    	if(Qq == 0){
                        	auxForce = (float)convert(numList, cont);
                          	Q = deci(auxForce, dec);
                        	Qq = 1;
                      		cont = -1;
                      		dec = -1;
                    	}else if(Qq ==1){
                        	auxForce = (float)convert(numList, cont);
                          	q = deci(auxForce, dec);
                        	Qq = 2;
                    	}
                  	if(Qq == 1 || Qq == 2)
                    	force = false;
                	}//fim while
            	}//fim while
			}//fim if
      	}//fim while
	  }//fim while
    
	lcd.clear();
	lcd.print("r=");
	cont = -1;
    bool exp = false;
	while(true){
    	tp = teclado.getKey();
      
		if(tp && tp >= '0' && tp <= '9'){
          	++cont;
           	lcd.write(tp);
          if(tp == '0'){
			numList[cont] = 0;
          }else{
            numList[cont]= (float)tp - '0';
          }
           	//numList[cont]= (float)tp - '0';
        }
      
      	if(tp && tp == '*'){
            lcd.write('.');
			dec = -1;
          	while(true){
              		tp = teclado.getKey();
					if(tp && tp >= '0' && tp <= '9' && !exp){
                    	++dec;
                    	++cont;
                    	lcd.write(tp);
                    	numList[cont]= tp - '0';
                    }
              
					if(tp && tp == 'B'){
                  		exp = true;
              			lcd.print("x10^");
					}
              
					if(tp && tp == 'C' && exp){
                      	isNeg = true;
                		lcd.print("-");
                	}
              
					if(tp && tp >= '0' && tp <= '9' && exp){
                      	exR = tp - '0';
                      	lcd.print(tp);
                        if(isNeg){
                        	exR *= -1;
                        	isNeg = false;
                        }
                    }
				if(tp == '#'){
                  	auxForce = (float)convert(numList, cont);
            		raio = (float)deci(auxForce, dec);
					calcForce(Q, q, raio, exQ, exq, exR, ForceOrCE);
					break;
                }
                  	
                //}
            }//fim while
        }//fim if
	}//fim while
    pressBut = false;
    delay(100);
    }//fim if

  if (tp && tp >= '0' && tp <= '9'){
    ++cont;
  	lcd.write(tp);
    numList[cont]= tp - '0';
  }
  
  if(tp == 'A'){
    oper = tp;
  	numero1 = convert(numList, cont);
    lcd.write(byte(0));
    cont=-1;
  }
  if(tp == 'B'){
    oper = tp;
  	numero1 = convert(numList, cont);
    lcd.write("x");
    cont=-1;
  }
  if(tp == 'C'){
    if(cont <0){
      isNegative = true;
      lcd.write("-");
    }
    else{
    oper = tp;
  	numero1 = convert(numList, cont);
    lcd.write("-");
    cont=-1;
    }
  }
  if(tp == 'D'){
    oper = tp;
  	numero1 = convert(numList, cont);
    lcd.write("+");
    cont=-1;
  }
  if(tp == '*'){
    oper = tp;
  	numero1 = convert(numList, cont);
    lcd.write("^");
    cont=-1;
  }
  if(tp == '#' && pressBut){
    oper = tp;
  	numero1 = convert(numList, cont);
    lcd.write("%");
    cont=-1;
  }
  
  buttonStateFor = digitalRead(PUSHBUTTONEQUAL);
  if(buttonStateFor == LOW && pressBut){
  	numero2 = convert(numList, cont);
  	
    lcd.setCursor(0,1);
    if(oper == 'A'){
    	result = (float)numero1/numero2;
      	lcd.print(result, 4);
    }
    if(oper == 'B'){
    	resultLong = numero1*numero2;
   		lcd.print(resultLong);
    }
    if(oper == 'C'){
    	resultLong = numero1-numero2;
   		lcd.print(resultLong);
    }
    if(oper == 'D'){
    	resultLong = numero1+numero2;
   		lcd.print(resultLong);
    }
    if(oper == '*'){
      resultLong = numero1;
      for(int i = 2; i <= numero2; i++){
      	resultLong*=numero1;
      }
   		lcd.print(resultLong);
    }
    if(oper == '#'){
    	resultLong = numero1%numero2;
   		lcd.print(resultLong);
    }
    pressBut = false;
  }
}
